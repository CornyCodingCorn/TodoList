<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:ToDoList.Controls"
        xmlns:converter="using:ToDoList.Converter"
        xmlns:m="clr-namespace:ToDoList.Models"
        x:DataType="m:TaskModel">
    <Design.PreviewWith>
        <controls:TaskItem />
    </Design.PreviewWith>
    
    <Style Selector="controls|TaskItem[ModelStatus=Done] Button#ForwardUpdateBtn">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="controls|TaskItem[ModelStatus=Done] Button#BackwardUpdateBtn">
        <Setter Property="Content" Value="Undone"/>
    </Style>
    
    <Style Selector="controls|TaskItem[ModelStatus=NotStarted] Button#ForwardUpdateBtn">
        <Setter Property="Content" Value="Start"/>
    </Style>
    <Style Selector="controls|TaskItem[ModelStatus=NotStarted] Button#BackwardUpdateBtn">
        <Setter Property="IsVisible" Value="False"/>
    </Style>
    
    <Style Selector="controls|TaskItem[ModelStatus=Started] Button#ForwardUpdateBtn">
        <Setter Property="Content" Value="Done"/>
    </Style>
    <Style Selector="controls|TaskItem[ModelStatus=Started] Button#BackwardUpdateBtn">
        <Setter Property="Content" Value="Stop"/>
    </Style>
    
    <Style Selector="controls|TaskItem">
        <Setter Property="ModelStatus" Value="{Binding Status, Mode=TwoWay}"/>
        <Setter Property="TimeSpent" Value="{Binding TimeSpent, Mode=TwoWay}"/>
        <!-- Set Defaults -->
        <Setter Property="Template">
            <ControlTemplate>
                <Expander HorizontalAlignment="Stretch" Margin="20, 0, 20, 0">
                    <Expander.Styles>
                        <Style Selector="Expander:expanded">
                            <Setter Property="Margin" Value="10, 0, 10, 0"/>
                        </Style>
                        <Style Selector="Expander ToggleButton:unchecked">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
                        </Style>
                        <Style Selector="Expander ToggleButton:unchecked > Border">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                        </Style>
                        <Style Selector="Expander ToggleButton:unchecked > Border:pointerover">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                        </Style>
                        <Style Selector="Expander ToggleButton:checked">
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}"/>
                        </Style>
                        <Style Selector="Expander ToggleButton:checked > Border">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
                        </Style>
                        <Style Selector="Expander ToggleButton:checked > Border:pointerover">
                            <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}"/>
                        </Style>
                    </Expander.Styles>
                    <Expander.Header>
                        <Grid ColumnDefinitions="Auto, *">
                            <controls:TaskStatusIcon Grid.Column="0"
                                                     ModelStatus="{Binding ((m:TaskModel)DataContext).Status, FallbackValue=Unable to bind, RelativeSource={RelativeSource TemplatedParent}}"
                                                     Width="32"
                                                     Height="32"
                                                     ImageMargin="3"/>
                            <TextBlock Grid.Column="1"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding ((m:TaskModel)DataContext).Name, FallbackValue=Unable to bind, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Grid>
                    </Expander.Header>
                    <Grid ColumnDefinitions="Auto, *" RowDefinitions="*, Auto">
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{TemplateBinding TimeString}"
                                   FontWeight="Bold"
                                   FontSize="18"
                                   x:Name="Clock"/>
                        <StackPanel Grid.Column="1" 
                                    Grid.Row="1"
                                    Orientation="Horizontal"
                                    FlowDirection="RightToLeft"
                                    HorizontalAlignment="Stretch">
                            <StackPanel.Styles>
                                <Style Selector="Button">
                                    <Setter Property="Margin" Value="0, 0, 15, 0"/>
                                    <Setter Property="Width" Value="75"/>
                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Style>
                            </StackPanel.Styles>
                            <Button Classes="danger"
                                    Command="{TemplateBinding DeleteCommand}"
                                    CommandParameter="{TemplateBinding DataContext}">
                                Del
                            </Button>
                            <Button x:Name="BackwardUpdateBtn"
                                    Classes="warning"
                                    Command="{Binding UpdateStatusCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                    CommandParameter="True">
                            </Button>
                            <Button x:Name="ForwardUpdateBtn"
                                    Classes="accept"
                                    Command="{Binding UpdateStatusCommand, RelativeSource={RelativeSource TemplatedParent}}">
                            </Button>
                        </StackPanel>
                        <TextBox Grid.Column="0" 
                                 Grid.Row="0"
                                 Grid.ColumnSpan="2"
                                 Height="300"
                                 Margin="0, 0, 0, 15"
                                 TextWrapping="Wrap"
                                 TextAlignment="Justify"
                                 Text="{Binding Description, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 AcceptsReturn="True"/>
                    </Grid>
                </Expander>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>