<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:ToDoList.Controls"
        xmlns:md="https://github.com/whistyun/Markdown.Avalonia.Tight"
        xmlns:ctxt="clr-namespace:ColorTextBlock.Avalonia;assembly=ColorTextBlock.Avalonia"
        xmlns:vm="clr-namespace:ToDoList.ViewModels"
        x:DataType="vm:TaskItemViewModel">
    <Design.PreviewWith>
        <controls:TaskItem />
    </Design.PreviewWith>

    <Style Selector="controls|TaskItem[ModelStatus=Done]">
        <Style Selector="^ Button#ForwardUpdateBtn">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Content" Value=" " />
        </Style>
        <Style Selector="^ Button#BackwardUpdateBtn">
            <Setter Property="Content" Value="Undone" />
        </Style>
    </Style>
    <Style Selector="controls|TaskItem[ModelStatus=NotStarted]">
        <Style Selector="^ Button#ForwardUpdateBtn">
            <Setter Property="Content" Value="Start" />
        </Style>
        <Style Selector="^ Button#BackwardUpdateBtn">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="Content" Value=" " />
        </Style>
    </Style>
    <Style Selector="controls|TaskItem[ModelStatus=Started]">
        <Style Selector="^ Button#ForwardUpdateBtn">
            <Setter Property="Content" Value="Done" />
        </Style>
        <Style Selector="^ Button#BackwardUpdateBtn">
            <Setter Property="Content" Value="Stop" />
        </Style>
    </Style>
    <Style Selector="controls|TaskItem[IsEditing=True] Panel#TaskDescription > md|MarkdownScrollViewer">
        <Setter Property="IsVisible" Value="False" />
    </Style>
    <Style Selector="controls|TaskItem[IsEditing=False] Panel#TaskDescription > TextBox">
        <Setter Property="IsVisible" Value="False" />
    </Style>

    <Style Selector="controls|TaskItem">
        <Setter Property="ModelStatus" Value="{Binding Model.Status, Mode=TwoWay}" />
        <Setter Property="IsEditing" Value="{Binding IsEditing, Mode=TwoWay}" />
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
        <!-- Set Defaults -->
        <Setter Property="Template">
            <ControlTemplate>
                <Expander x:Name="ExpanderPart"
                          IsExpanded="{TemplateBinding IsExpanded, Mode=TwoWay}"
                          HorizontalAlignment="Stretch"
                          Margin="20,0,20,0"
                          MinHeight="34"
                          BorderThickness="0">
                    <Expander.Styles>
                        <Style Selector="Expander">
                            <Style Selector="^:expanded">
                                <Setter Property="Margin" Value="10, 0, 10, 0" />
                            </Style>
                            <Style Selector="^.runAnim:expanded > DockPanel > Border#ExpanderContent">
                                <Setter Property="ClipToBounds" Value="True" />
                                <Style.Animations>
                                    <Animation Duration="0:0:0.25" Easing="CubicEaseInOut" FillMode="Forward">
                                        <KeyFrame Cue="0%">
                                            <Setter Property="IsVisible" Value="True" />
                                            <Setter Property="MinHeight" Value="0" />
                                            <Setter Property="Height" Value="0" />
                                        </KeyFrame>
                                        <KeyFrame Cue="100%">
                                            <Setter Property="Height" Value="363" />
                                            <Setter Property="IsVisible" Value="True" />
                                        </KeyFrame>
                                    </Animation>
                                </Style.Animations>
                            </Style>
                            <Style Selector="^.runAnim:not(:expanded) > DockPanel > Border#ExpanderContent">
                                <Setter Property="ClipToBounds" Value="True" />
                                <Style.Animations>
                                    <Animation Duration="0:0:0.10" Easing="CubicEaseInOut" FillMode="Forward">
                                        <KeyFrame Cue="0%">
                                            <Setter Property="Height" Value="363" />
                                            <Setter Property="IsVisible" Value="True" />
                                        </KeyFrame>
                                        <KeyFrame Cue="100%">
                                            <Setter Property="IsVisible" Value="False" />
                                            <Setter Property="MinHeight" Value="0" />
                                            <Setter Property="Height" Value="0" />
                                        </KeyFrame>
                                    </Animation>
                                </Style.Animations>
                            </Style>
                            <Style Selector="^ ToggleButton:unchecked">
                                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
                                <Style Selector="^ > Border">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style Selector="^:pointerover">
                                        <Setter Property="Background"
                                                Value="{DynamicResource ButtonBackgroundPointerOver}" />
                                    </Style>
                                    <Style Selector="^ Border#ExpandCollapseChevronBorder">
                                        <Setter Property="Width" Value="24" />
                                        <Setter Property="Height" Value="24" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                    </Style>
                                </Style>
                            </Style>
                            <Style Selector="^ ToggleButton:checked">
                                <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
                                <Setter Property="BorderThickness" Value="0" />
                                <Style Selector="^ > Border">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                                    <Style Selector="^:pointerover">
                                        <Setter Property="Background"
                                                Value="{DynamicResource ButtonBackgroundPointerOver}" />
                                    </Style>
                                    <Style Selector="^ Border#ExpandCollapseChevronBorder">
                                        <Setter Property="Width" Value="24" />
                                        <Setter Property="Height" Value="24" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Style Selector="^ Path">
                                            <Style.Animations>
                                                <Animation Duration="0:0:0.15" FillMode="Forward">
                                                    <KeyFrame Cue="0%">
                                                        <Setter Property="RotateTransform.Angle" Value="0" />
                                                    </KeyFrame>
                                                    <KeyFrame Cue="100%">
                                                        <Setter Property="RotateTransform.Angle" Value="180" />
                                                    </KeyFrame>
                                                </Animation>
                                            </Style.Animations>
                                        </Style>
                                    </Style>
                                </Style>
                            </Style>
                        </Style>
                    </Expander.Styles>
                    <Expander.Header>
                        <Grid ColumnDefinitions="Auto, *">
                            <controls:TaskStatusIcon Grid.Column="0"
                                                     ModelStatus="{Binding Model.Status, FallbackValue=Unable to bind}"
                                                     Width="32"
                                                     Height="32"
                                                     ImageMargin="3" />
                            <TextBlock Grid.Column="1"
                                       TextAlignment="Center"
                                       VerticalAlignment="Center"
                                       Text="{Binding Model.Name, FallbackValue=Unable to bind}" />
                        </Grid>
                    </Expander.Header>
                    <Grid ColumnDefinitions="Auto, *" RowDefinitions="*, Auto">
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   VerticalAlignment="Center"
                                   Text="{Binding TimeString}"
                                   FontWeight="Bold"
                                   FontSize="18"
                                   x:Name="Clock" />
                        <Panel Grid.Row="1"
                               Grid.Column="1"
                               x:Name="BtnPanel">
                            <Panel.Styles>
                                <Style Selector="StackPanel">
                                    <Setter Property="Orientation" Value="Horizontal" />
                                    <Setter Property="FlowDirection" Value="RightToLeft" />
                                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                                    <Style Selector="^ Button">
                                        <Setter Property="Margin" Value="0, 0, 15, 0" />
                                        <Setter Property="Width" Value="75" />
                                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </Style>
                                </Style>
                            </Panel.Styles>
                            <StackPanel x:Name="NormalModePanel"
                                        IsVisible="{Binding IsEditing, Converter={StaticResource NotBooleanConverter}}">
                                <Button Classes="danger"
                                        Command="{Binding DeleteCommand}"
                                        CommandParameter="{TemplateBinding DataContext}">
                                    Del
                                </Button>
                                <Button x:Name="BackwardUpdateBtn"
                                        Classes="warning"
                                        Command="{Binding UpdateStatusCommand}"
                                        CommandParameter="True">
                                </Button>
                                <Button x:Name="ForwardUpdateBtn"
                                        Classes="accept"
                                        Command="{Binding UpdateStatusCommand}">
                                </Button>
                                <Button x:Name="EditBtn"
                                        Classes="accent"
                                        Command="{Binding StartEditingCommand}">
                                    Edit
                                </Button>
                            </StackPanel>
                            <StackPanel x:Name="EditModePanel"
                                        IsVisible="{Binding IsEditing}">
                                <Button Classes="danger"
                                        Command="{Binding StopEditingCommand}"
                                        CommandParameter="{StaticResource TrueBoolean}">
                                    Discard
                                </Button>
                                <Button Classes="accept"
                                        Command="{Binding StopEditingCommand}"
                                        CommandParameter="{StaticResource FalseBoolean}">
                                    Accept
                                </Button>
                            </StackPanel>
                        </Panel>
                        <Panel Grid.Column="0"
                               Grid.Row="0"
                               Grid.ColumnSpan="2"
                               x:Name="TaskDescription"
                               Height="300">
                            <TextBox Background="{DynamicResource SystemListLowColor}"
                                     SelectionBrush="{DynamicResource SystemBaseLowColor}"
                                     Height="{Binding $parent.Height}"
                                     Margin="0, 0, 0, 15"
                                     TextWrapping="Wrap"
                                     Text="{Binding EditingDescription, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     AcceptsReturn="True">
                                <TextBox.Styles>
                                    <Style Selector="TextBox">
                                        <Style Selector="^:pointerover Border#PART_BorderElement">
                                            <Setter Property="Background" Value="{DynamicResource SystemListLowColor}" />
                                        </Style>
                                        <Style Selector="^:focus Border#PART_BorderElement">
                                            <Setter Property="Background" Value="{DynamicResource SystemListLowColor}" />
                                        </Style>
                                    </Style>
                                </TextBox.Styles>
                            </TextBox>
                            <md:MarkdownScrollViewer xml:space="preserve"
                                                     Height="{Binding $parent.Height}"
                                                     SelectionEnabled="True"
                                                     Markdown="{Binding Model.Description}">
                                <md:MarkdownScrollViewer.Styles>
                                    <Style Selector="ctxt|CTextBlock">
                                        <Style Selector="^.Heading1">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource TextControlForeground}" />
                                            <Setter Property="SelectionBrush"
                                                    Value="{DynamicResource SystemListLowColor}" />
                                        </Style>
                                        <Style Selector="^.Heading2">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource TextControlForeground}" />
                                            <Setter Property="SelectionBrush"
                                                    Value="{DynamicResource SystemListLowColor}" />
                                        </Style>
                                        <Style Selector="^.Heading3">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource TextControlForeground}" />
                                            <Setter Property="SelectionBrush"
                                                    Value="{DynamicResource SystemListLowColor}" />
                                        </Style>
                                        <Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
                                        <Setter Property="SelectionBrush" Value="{DynamicResource SystemListLowColor}" />
                                    </Style>
                                </md:MarkdownScrollViewer.Styles>
                                This text is needed otherwise the program will crash before binding start
                            </md:MarkdownScrollViewer>
                        </Panel>
                    </Grid>
                </Expander>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>