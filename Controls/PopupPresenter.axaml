<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="using:ToDoList.Controls"
        xmlns:viewModels="clr-namespace:ToDoList.ViewModels"
        x:DataType="viewModels:PopupPresenterViewModel">
    <Design.PreviewWith>
        <controls:PopupPresenter />
    </Design.PreviewWith>

    <Style Selector="controls|PopupPresenter:animating[IsShowingDialog=True]">
        <Style Selector="^ Rectangle#BackgroundRect">
            <Style.Animations>
                <Animation Duration="0:0:0.3" FillMode="Forward" Easing="CubicEaseInOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="0"/>
                        <Setter Property="IsVisible" Value="True"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="IsVisible" Value="True"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="^ ContentPresenter#PopupContentPresenter">
            <Style.Animations>
                <Animation Duration="0:0:0.3" FillMode="Forward" Easing="CubicEaseInOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleX" Value="0"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="0"/>
                        <Setter Property="IsVisible" Value="True"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleX" Value="1"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="1"/>
                        <Setter Property="IsVisible" Value="True"/>
                        <Setter Property="IsEnabled" Value="True"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
    </Style>
    <Style Selector="controls|PopupPresenter:animating[IsShowingDialog=False]">
        <Style Selector="^ Rectangle#BackgroundRect">
            <Style.Animations>
                <Animation Duration="0:0:0.15" FillMode="Forward" Easing="CubicEaseInOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="Opacity" Value="0.5"/>
                        <Setter Property="IsVisible" Value="True"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="Opacity" Value="0"/>
                        <Setter Property="IsVisible" Value="False"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
        <Style Selector="^ ContentPresenter#PopupContentPresenter">
            <Style.Animations>
                <Animation Duration="0:0:0.15" FillMode="Forward" Easing="CubicEaseInOut">
                    <KeyFrame Cue="0%">
                        <Setter Property="ScaleTransform.ScaleX" Value="1"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="1"/>
                        <Setter Property="IsVisible" Value="True"/>
                        <Setter Property="IsEnabled" Value="True"/>
                    </KeyFrame>
                    <KeyFrame Cue="100%">
                        <Setter Property="ScaleTransform.ScaleX" Value="0"/>
                        <Setter Property="ScaleTransform.ScaleY" Value="0"/>
                        <Setter Property="IsVisible" Value="False"/>
                        <Setter Property="IsEnabled" Value="False"/>
                    </KeyFrame>
                </Animation>
            </Style.Animations>
        </Style>
    </Style>
    
    <Style Selector="controls|PopupPresenter">
        <Setter Property="DataContext">
            <Setter.Value>
                <viewModels:PopupPresenterViewModel/>
            </Setter.Value>
        </Setter>
        <Setter Property="IsShowingDialog" Value="{Binding IsShowingDialog, Mode=TwoWay}"/>
        <Setter Property="PopupContent" Value="{Binding PopupContent, Mode=TwoWay}"/>
        <Setter Property="IsStartedAnimating" Value="{Binding IsStartedAnimating}"/>
        <!-- Set Defaults -->
        <Setter Property="Template">
            <ControlTemplate>
                <Panel>
                    <ContentPresenter Classes="stretch" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    
                    <Rectangle IsVisible="False" x:Name="BackgroundRect" Classes="stretch" Fill="Black" Opacity="0.3"/>
                    
                    <!-- prevent tabbing in the background -->
                    <Button IsEnabled="{TemplateBinding IsShowingDialog}" HotKey="Tab" Width="0" Height="0"/> 
                    
                    <ContentPresenter IsVisible="False" x:Name="PopupContentPresenter" Classes="center" Content="{TemplateBinding PopupContent}"/>
                </Panel>
            </ControlTemplate>
        </Setter>
    </Style>
</Styles>
